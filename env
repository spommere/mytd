#! /bin/sh

ver="mytd 0.3 Copyright (c) 2024 All rights reserved."

showmenu=once
shownmenu=0
#showmenu=always

#
# USAGE stuff
#

usagecheck()
{
  cu=$1
  if [ $x -gt $y ]
  then
    echo usagecheck : x greater than y
    exit
  fi

  if [ $cu -lt $NMIN ]
  then
    echo usagecheck : at least $NMIN parameters expected
    exit
  fi

  if [ $cu -gt $NMAX ]
  then
    echo "usagecheck : at most $NMAX parameters expected ($cu)"
    exit
  fi
}

usage()
{
  NMIN=2
  NMAX=8
  req=$1
  c=$2
  x=0; y=0
  usagecheck $#
  p[1]=${3:-parameter1}
  p[2]=${4:-parameter2}
  p[3]=${5:-parameter3}
  p[4]=${6:-parameter4}
  p[5]=${7:-parameter5}
  p[6]=${8:-parameter6}
  str="usage: $0 "
  if [ $c -ne $req ]
  then
    for ((i=1;i<=$req;i++))
    do
      str="${str}<${p[$i]}> "
    done
    echo "$str"
    exit
  fi
}
  
usageXtoY()
{
  NMIN=3
  NMAX=15
  x=$1
  y=$2
  c=$3
  opt=$4
  usagecheck $#
  p[1]=${5:-parameter1}
  p[2]=${6:-parameter2}
  p[3]=${7:-parameter3}
  p[4]=${8:-parameter4}
  p[5]=${9:-parameter5}
  p[6]=${10:-parameter6}
  p[7]=${11:-parameter7}
  p[8]=${12:-parameter8}
  p[9]=${13:-parameter9}
  if [ $c -lt $x -o $c -gt $y ]
  then
    for ((j=$x;j<=$y;j++))
    do
      str="usage: $opt "
      for ((i=1;i<=$j;i++))
      do
        str="${str}<${p[$i]}> "
      done
      echo "$str"
    done
    option=invalid
  fi
}

usageXorY()
{
  NMIN=3
  NMAX=9
  x=$1
  y=$2
  c=$3
  usagecheck $#
  p[1]=${4:-parameter1}
  p[2]=${5:-parameter2}
  p[3]=${6:-parameter3}
  p[4]=${7:-parameter4}
  p[5]=${8:-parameter5}
  p[6]=${9:-parameter6}
  if [ $c -ne $x -a $c -ne $y ]
  then
    for j in $x $y
    do
      str="usage: $0 "
      for ((i=1;i<=$j;i++))
      do
        str="${str}<${p[$i]}> "
      done
      echo "$str"
    done
    exit
  fi
}

usage0()
{
  c=$1
  if [ $c -ne 0 ]
  then
    echo "usage: $0"
    option=invalid
  fi
}

usage1()
{
  c=$1
  opt=$2
  p1=${3:-parameter1}
  if [ $c -ne 1 ]
  then
    echo "usage: $opt <$p1>"
    option=invalid
  fi
}

usage2()
{
  c=$1
  opt=$2
  p1=${3:-parameter1}
  p2=${4:-parameter2}
  if [ $c -ne 2 ]
  then
    echo "usage: $opt <${p1}> <${p2}>"
    option=invalid
  fi
}

usage3()
{
  c=$1
  p1=${2:-parameter1}
  p2=${3:-parameter2}
  p3=${4:-parameter3}
  p4=${5:-parameter4}
  p5=${6:-parameter5}
  p6=${7:-parameter6}
  if [ $c -ne 3 ]
  then
    echo "usage: $0 <$p1> <$p2> <$p3>"
    exit
  fi
}

usage4()
{
  c=$1
  p1=${2:-parameter1}
  p2=${3:-parameter2}
  p3=${4:-parameter3}
  p4=${5:-parameter4}
  p5=${6:-parameter5}
  p6=${7:-parameter6}
  if [ $c -ne 4 ]
  then
    echo "usage: $0 <$p1> <$p2> <$p3> <$p4>"
    exit
  fi
}

usage5()
{
  c=$1
  p1=${2:-parameter1}
  p2=${3:-parameter2}
  p3=${4:-parameter3}
  p4=${5:-parameter4}
  p5=${6:-parameter5}
  p6=${7:-parameter6}
  if [ $c -ne 5 ]
  then
    echo "usage: $0 <$p1> <$p2> <$p3> <$p4> <$p5>"
    exit
  fi
}

usage6()
{
  c=$1
  p1=${2:-parameter1}
  p2=${3:-parameter2}
  p3=${4:-parameter3}
  p4=${5:-parameter4}
  p5=${6:-parameter5}
  p6=${7:-parameter6}
  if [ $c -ne 6 ]
  then
    echo "usage: $0 <$p1> <$p2> <$p3> <$p4> <$p5> <$p6>"
    exit
  fi
}

usage7()
{
  c=$1
  p1=${2:-parameter1}
  p2=${3:-parameter2}
  p3=${4:-parameter3}
  p4=${5:-parameter4}
  p5=${6:-parameter5}
  p6=${7:-parameter6}
  p7=${8:-parameter7}
  if [ $c -ne 7 ]
  then
    echo "usage: $0 <$p1> <$p2> <$p3> <$p4> <$p5> <$p6> <$p7>"
    exit
  fi
}

usage8()
{
  c=$1
  p1=${2:-parameter1}
  p2=${3:-parameter2}
  p3=${4:-parameter3}
  p4=${5:-parameter4}
  p5=${6:-parameter5}
  p6=${7:-parameter6}
  p7=${8:-parameter7}
  p8=${9:-parameter8}
  if [ $c -ne 8 ]
  then
    echo "usage: $0 <$p1> <$p2> <$p3> <$p4> <$p5> <$p6> <$p7> <$p8>"
    exit
  fi
}

usage9()
{
  c=$1
  p1=${2:-parameter1}
  p2=${3:-parameter2}
  p3=${4:-parameter3}
  p4=${5:-parameter4}
  p5=${6:-parameter5}
  p6=${7:-parameter6}
  p7=${8:-parameter7}
  p8=${9:-parameter8}
  p9=${10:-parameter9}
  if [ $c -ne 9 ]
  then
    echo "usage: $0 <$p1> <$p2> <$p3> <$p4> <$p5> <$p6> <$p7> <$p8> <$p9>"
    exit
  fi
}
